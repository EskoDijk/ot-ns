#!/bin/bash
# Copyright (c) 2024-2025, The OTNS Authors.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the copyright holder nor the
#    names of its contributors may be used to endorse or promote products
#    derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

# Bootstraps a complete install of OTNS, nodes, and dependencies. Also
# performs a quick unit-test.
# It can be used after a fresh Git clone, or after an update (Git pull).

set -euxo pipefail

OTNS_GO_VERSION_MIN=23
OTNS_PYTHON3_VERSION_MIN=9
GOLANG_APT_PKG="golang-go"
GOLANG_BREW_PKG="golang"

if [[ "$(uname)" == "Darwin" ]]; then
    declare -rx Darwin=1
    declare -rx Linux=0
elif [[ "$(uname)" == "Linux" ]]; then
    declare -rx Darwin=0
    declare -rx Linux=1
else
    echo "Unsupported OS: $(uname)"
    exit 1
fi

# shellcheck source=script/utils.sh
. "$(dirname "$0")"/utils.sh

# Check if Go is installed and version is high enough. Auto-install if possible.
if installed go; then
    if ! check_minimum_go_version "${OTNS_GO_VERSION_MIN}"; then
        die "Please install Go 1.${OTNS_GO_VERSION_MIN} or higher manually from https://go.dev/dl/ , and retry."
    fi
else
    install_golang "${OTNS_GO_VERSION_MIN}" "${GOLANG_APT_PKG}" "${GOLANG_BREW_PKG}"
fi

# Check if Python is installed and version is high enough. Auto-install later on, if needed.
if installed python3; then
    if ! check_minimum_python3_version "${OTNS_PYTHON3_VERSION_MIN}"; then
        die "Please install Python 3.${OTNS_PYTHON3_VERSION_MIN} or higher, and retry."
    fi
fi

# Some basic items are missing on Ubuntu Docker; they're assumed present on MacOS.
if [[ $Linux == 1 ]]; then
    # sudo is required for install_package to work
    if ! installed sudo; then
        apt-get install -y sudo
    fi
    install_package xdg-open --apt xdg-utils || true
fi

# Install Git if needed
install_package git --apt git --brew git || true

# Get (first time) or update (after a 'git pull') all submodules.
git submodule update --init

# Do the rest via the test script, automatically
./script/test py-ver-unittests || die "OTNS Installation/tests failed!"

# Check if 'otns' command is available.
if [[ -n $(which otns) ]]; then
    echo "OTNS installed - use 'otns' to start it."
else
    echo "OTNS installed - please add ~/go/bin to your PATH variable first, to use it."
fi
