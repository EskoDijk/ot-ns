#!/bin/bash
#
#  Copyright (c) 2023-2024, The OpenThread Authors.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#

printf "\n./script/build_all  --  builds all OT node versions (that weren't built yet or require an update)\n\n"

set -euo pipefail

Linux=0
if [[ "$(uname)" == "Linux" ]]; then
    Linux=1
fi

build_error()
{
    printf '\n****************\n  Failed build script: %s - stopping.\n****************\n\n' "$@"
    exit 1
}

main()
{
    local options=()
    options+=("$@")
    local versions=()
    versions+=(v11 v12 v13 latest br)
    # MacOs can't build CCM nodes currently - compiler warnings (treated as errors)
    if [[ $Linux == 1 ]]; then
        versions+=(ccm br_ccm)
    fi

    for VER in ${versions[@]}; do
        SCRIPTNAME="./script/build_$VER"

        printf 'Node %s: building with script %s\n' "${VER}" "${SCRIPTNAME}"
        if ${SCRIPTNAME} "${options[@]}"; then
            printf 'Node %s: completed build with script %s\n' "${VER}" "${SCRIPTNAME}"
        else
            build_error "${SCRIPTNAME}"
        fi
    done

    printf '\nSuccessfully completed building all OT node versions.\n'
}

main "$@"
